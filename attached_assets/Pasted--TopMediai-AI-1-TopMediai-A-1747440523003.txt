[작업지시서: TopMediai AI 음악 생성 서비스 구축 – 전체 플로우 및 성별/보컬 프롬프트 자동화 포함]

■ 1. 개발 목적 및 목표
- TopMediai 공식 AI 음악 생성 API를 사용하여, 고객이 직접 곡의 스타일/성별/가사/장르/길이 등 다양한 옵션을 선택하면  
  실제로 AI가 음악을 생성하고, mp3 및 가사/메타데이터를 저장·다운로드·재생할 수 있는 B2C/B2B SaaS형 서비스 플랫폼을 구축한다.

■ 2. 전체 작업 플로우
1) [API Key 준비]  
   - TopMediai 계정에서 API Key 발급(또는 테스트용 발급키 활용)
2) [서버/백엔드 구축]
   - Node.js(Express) 기반 RESTful API 서버에 TopMediai API 연동 로직 추가
   - music-generation.ts 등에서 API 키를 이용해 TopMediai의 음악 생성/상태조회/결과조회/파일다운로드까지 전과정 구현
   - Drizzle ORM + PostgreSQL 연동으로, 생성된 곡/가사/메타데이터를 DB에 저장
   - 파일저장소(mp3, 가사 등) 연동 및 다운로드/재생용 경로 제공
3) [프론트엔드 UI/UX 설계]
   - React/TypeScript로 Suno 스타일의 입력폼, 옵션버튼, 곡 생성상태 인디케이터, 결과(곡/가사/파형/다운로드) UI 구현
   - “내 음악” 보관함, 곡 상세, 리스트, 다운로드 등 포함
4) [옵션별 프롬프트 자동화 시스템 구현]
   - 남녀 성별/보컬 스타일/장르/무드/길이 등 **버튼/셀렉트박스**로 구성,  
     선택값을 자동으로 프롬프트(설명)에 삽입하여 API로 전달
   - 예: “female singer, emotional ballad about hope” 등 프롬프트 자동 조합
5) [실제 음악 생성/조회/저장]
   - API로 음악 생성 요청→상태 폴링→생성완료시 mp3/가사/이미지/메타데이터 모두 서버/DB/프론트에 연동
6) [오디오 시각화/플레이어/다운로드]
   - React 오디오플레이어, waveform.js 등으로 파형 시각화,  
     다운로드/공유/재생 등 Suno 스타일 UI 완성
7) [유저 관리/관리자 기능]
   - Firebase 인증 등 기존 시스템과 연동,  
     유저별 곡 생성내역, 다운로드, 과금 등 관리
8) [에러처리/모니터링/로그]
   - 생성 실패/API 에러/오류 상세 로깅, 관리자 알림, 장애시 예외처리 로직

■ 3. 세부 작업 내역

### 3-1. API 연동 및 서버(백엔드) 개발
- [ ] TopMediai API Key 환경변수로 설정
- [ ] /api/music/generate 등 REST API 라우트에서 프롬프트/옵션/가사 등 파라미터 받아서 TopMediai로 전달
- [ ] 결과(status=complete) 확인 후 mp3/가사/이미지/메타데이터 추출, DB에 저장
- [ ] 비동기 작업, 상태 polling, 장애처리(재시도/로그)

### 3-2. 프론트엔드 UI/UX 및 입력폼 개발
- [ ] Suno 스타일 UI/UX 설계:  
    - 프롬프트(곡 설명),  
    - 성별/보컬/장르/스타일/길이 버튼/셀렉트,  
    - “가사 자동생성/직접입력” 선택,  
    - 생성진행상태 표시(로딩바, 메시지),  
    - 곡/가사/파형/재생/다운로드 UI
- [ ] “내 음악” 리스트, 상세페이지, 다운로드/공유 기능
- [ ] 프롬프트 자동조합(아래 3-3항목) 시스템 UI 구현

### 3-3. 성별/보컬 스타일 프롬프트 자동화 시스템
- [ ] 고객이 “성별(남/여/아이/특정스타일)” 및 “보컬 스타일”을 버튼·셀렉트박스 등으로 선택
- [ ] 선택값을 프롬프트 문자열 맨 앞/뒤에 자동 삽입(예: “female singer, bright mood, jazz, a song about hope”)
- [ ] 예시:
      - [여성 보컬] → “female singer, ...”
      - [남성 보컬] → “male singer, ...”
      - [아이 보컬] → “child voice, ...”
      - [특정스타일] → “IU style female singer, ...” 등
- [ ] 프롬프트/옵션 결합 결과를 사용자에게 미리보기로 보여줌
- [ ] 최종적으로 API 호출시 해당 프롬프트를 그대로 TopMediai에 전달

### 3-4. 테스트 및 검증
- [ ] 각 옵션(성별/스타일/가사/길이 등) 조합별 실제 곡 생성
- [ ] mp3/가사/이미지/파형 정상저장 및 프론트 UI 정상동작 테스트
- [ ] 예외/오류 상황(네트워크, API에러, 옵션 미입력 등) 검증

### 3-5. 확장성/유지보수
- [ ] 향후 TopMediai API가 “성별/보컬” 등 파라미터 공식 지원시 즉시 전환 가능한 구조로 개발
- [ ] Voice Cloning API 등 별도 기능 연동시 옵션 추가만으로 확장

### 3-6. 보고 및 기록
- [ ] 개발 진행상황, 장애/에러/예외 발생시 상세 로그,  
      대표님(송기우)에게 주기적 보고

■ 4. 샘플 코드/구현 예시 (참고용)
(프롬프트 자동조합)
```javascript
const [vocalType, setVocalType] = useState('female');
const [prompt, setPrompt] = useState('');
const finalPrompt = `${vocalType === 'female' ? 'female singer' : 'male singer'}, ${prompt}`;

// 음악 생성시
axios.post('/api/music/generate', { prompt: finalPrompt, ... })
