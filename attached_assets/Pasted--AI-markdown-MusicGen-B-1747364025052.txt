라플이 작업 지시서 (AI 보컬 + 사용자 “내 목소리” 클론 보컬까지 포함)
아래 박스를 그대로 복사-붙여넣기 하면 됩니다.

markdown
복사
편집
[MusicGen + Bark TTS + Voice-Cloning 통합 고도화]

────────────────────────────────────
0. 개요
────────────────────────────────────
• 목표: ① 한국어 가사 ② 스타일/길이 선택 ③ 보컬 성별(or 내 목소리) 선택  
  → AI 반주 + TTS 보컬(or 클론 보컬) + ffmpeg 믹싱 mp3 제공

• 사용 API
  - 반주  : facebook/musicgen-large (Replicate)
  - AI TTS: suno/bark  male_kr | female_kr
  - 내 목소리 TTS: ElevenLabs Voice-Cloning (instant voice cloning)
  - 믹싱  : ffmpeg (+ fluent-ffmpeg)

────────────────────────────────────
1. 공통 타입 정의  (shared/types.ts)
────────────────────────────────────
export type VoiceMode = "ai" | "clone";

export interface MusicGenRequest {
title: string;
prompt: string;
lyrics?: string;
duration: 30 | 60 | 120 | 180 | 240;
styleTags: string[];
voiceMode: VoiceMode; // ai | clone
voiceGender?: "male_kr" | "female_kr"; // ai 모드 전용
voiceId?: string; // clone 모드(이미 등록된 voice)
}

markdown
복사
편집

────────────────────────────────────
2. 서버
────────────────────────────────────
● **2-1  voice-cloning 서비스**  
  ‣ `server/services/voice-clone.ts`
  - `POST /api/voice/upload`  (multipart)  
    · body: audio file (≥60﻿s 음성)  
    · 작업: ElevenLabs `/v1/voices/add` → voiceId 반환 → DB 저장(userId, voiceId, name)  
  - `GET /api/voice/list`  → 로그인 사용자의 voice 목록 반환

● **2-2  music-generation 서비스**  
  ‣ `server/services/music-generation.ts`
  1. **가사 생성**  
     · lyrics 없으면 GPT-4o로 한글 가사 생성  
  2. **반주 생성 (MusicGen)**  
     · duration, styleTags 반영
  3. **보컬 생성**  
     • `voiceMode === "ai"` → Bark TTS (voice_preset = male_kr / female_kr)  
     • `voiceMode === "clone"` → ElevenLabs `/v1/text-to-speech/{voiceId}`  
        ↳ 모델: `eleven_multilingual_v2`
  4. **ffmpeg 믹싱**  
     `[0:a][1:a]amix=inputs=2:duration=longest` → mp3 출력, presigned URL 반환

● **2-3  music 라우터**  
  ‣ `server/routes/music-generation-routes.ts`
  - `POST /api/music/generate`  ← MusicGenRequest 타입  
  - progress 로그 콘솔 출력

────────────────────────────────────
3. 클라이언트  (client/src/pages/music-generate.tsx)
────────────────────────────────────
1) **보컬 선택 UI**  
   - Radio: ① AI 보컬 ② 내 목소리  
   - AI 선택 시 → 성별 드롭다운 (남/여)  
   - 내 목소리 선택 시  
     • voice 목록(select) +  “+ 새 목소리 업로드” 버튼  
     • 새 업로드 모달 → wav/mp3 업로드 → /api/voice/upload 호출 후 목록 갱신

2) **길이/스타일**  
   - Length dropdown: 30·60·120·180·240 ﻿초  
   - Multi-select styleTags (자장가·한국동요·애니·K-pop·발라드·힙합·클래식·뉴에이지 …)

3) **가사 자동 생성**  
   - “프롬프트로 가사 생성” 버튼 유지

4) **음악 생성 버튼**  
   - axios POST /api/music/generate (MusicGenRequest)  
   - 응답 URL → `<audio controls />` + download 버튼

────────────────────────────────────
4. 테스트 체크리스트
────────────────────────────────────
- [ ] 60 s AI(여성) 자장가 OK  
- [ ] 180 s 내 목소리(voiceId) 한국동요 OK  
- [ ] AI/Clone 전환 시 적절한 입력 필드 표시/숨김  
- [ ] 4분(240 s) K-pop 생성 길이 확인  
- [ ] 가사 미입력 → GPT 가사 자동 생성 확인

────────────────────────────────────
5. 참고 정보
────────────────────────────────────
○ MusicGen-large params  
  `{ audio_format:"wav", duration, top_k:250, top_p:0, temperature:1 }`  
○ Bark 한국어 preset: `male_kr`, `female_kr`  
○ ElevenLabs Voice cloning  
  • Instant cloning, audio ≥ 1 분 권장  
  • TTS endpoint: `/v1/text-to-speech/{voiceId}`  
○ ffmpeg 예시  
  `ffmpeg -i musicgen.wav -i tts.wav -filter_complex "[0:a][1:a]amix=inputs=2:duration=longest" out.mp3`

────────────────────────────────────
[끝]  작업 완료 후 5 가지 테스트 항목 결과 캡처를 공유 바랍니다.