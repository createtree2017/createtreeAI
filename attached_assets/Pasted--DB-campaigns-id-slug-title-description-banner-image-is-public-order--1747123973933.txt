지금까지 구현 ✅
영역	현황	확인 사항
DB	campaigns 테이블 생성( id·slug·title·description·banner_image·is_public·order + timestamp )	① 기간·단계 컬럼 없음
② 직접 CREATE TABLE → Drizzle 마이그레이션과 불일치
→ 다음 단계에서 drizzle-kit push 로 스키마 동기화 필요
백엔드	GET /api/campaigns (공개), POST/PUT/DELETE /api/admin/campaigns (관리자) 등 CRUD 라우트 작성	① Zod 스키마 중복 import 정리 완료 여부 재확인
② banner_image 저장 방식(로컬 → Cloudinary/S3) 아직 임시
프론트	Admin 탭 & <CampaignManagement> 생성, 기본 폼(제목·slug·설명·배너·공개여부·표시순서) 연결	① 목록 조회/수정/삭제 UI 미완
② 파일 업로드 컴포넌트 경로 수정 ‑ 실제 응답 확인 필요
업로드	POST /api/upload (이미 사용 중인 공통 엔드포인트) 재사용	5 MB 제한·MIME 체크 OK, XSS / SVG 필터는 아직 없음

첨부 ③(캠페인 상세)에서 보이는 추가 설정 항목
카테고리	샘플 UI에서 보이는 필드	현재 테이블에?	비고
기간 설정	신청·발표·콘텐츠 등록·결과 발표 날짜	✖	start_apply_at, end_apply_at 등 4‑5개 TIMESTAMP 컬럼 필요
캠페인 상세정보	상세 설명(HTML 가능), 제공 내역, 참여 안내, 업체 정보	부분(설명만)	detail_html, benefit, guide, company_info 등 TEXT 컬럼
검색 키워드	해시태그·키워드	✖	keywords TEXT[] 혹은 별도 테이블
보상·금액	“10만” 뱃지	✖	reward_amount INT + reward_unit(원/포인트)
모집 현황	신청 인원·모집 인원	✖	실시간 집계용 필드 or JOIN
연관 캠페인	추천 로직	✖	구현은 나중에 가능

→ 위 필드들은 MVP(기본 생성·조회·수정·삭제) 이후 단계에서 순차적으로 추가해도 무방입니다.
현재 구조만으로도 캠페인 리스트 노출 & 단순 배너 페이지는 만들 수 있으므로, 일정상 “나중에 해도 되는 것” 으로 판단됩니다.

바로 잡아야 할 문제점 🛠️
Drizzle 마이그레이션 누락
직접 SQL 실행 → 로컬 스키마와 마이그레이션 히스토리 불일치

bash
복사
편집
npx drizzle-kit generate:pg && npx drizzle-kit push
로 campaigns 테이블을 정식 마이그레이션에 포함하세요.

order 컬럼 (예약어 충돌)
"order" 로 따옴표 처리했지만, ORM 레벨에서도 항상 이스케이프 필요.
→ 안전하게 display_order 로 rename 권장.

파일 업로드 응답 확인
프론트에서 업로드 후 URL 저장이 잘 되는지 콘솔 체크.

Cloudinary/S3 사용 시 서명 URL 발급 로직 추가

썸네일 변환/용량 제한 등 미들웨어 준비

API 권한 검사
현재 isAdmin 가드 적용되어 있나요? 없으면 기타 관리자 API와 동일한 미들웨어로 보호.

리액트 쪽 상태 동기화
새로 만든 캠페인 저장 후 리스트를 mutate 하여 즉시 반영하도록 TanStack Query 사용.

다음 개발 로드맵 🚀
단계	작업	주안점
1. BE 안정화	• Drizzle 마이그레이션 정리
• display_order rename
• 배너 업로드 → Cloudinary (env: CLOUDINARY_URL) 연동	DB 일관성, 파일 보안
2. 기본 Admin UI 완성	• 캠페인 목록 테이블(검색·정렬·페이징)
• 수정/삭제 모달
• react-hook-form + Zod validation	UX 완성도
3. 사용자용 목록/상세 페이지	• /campaigns 리스트(썸네일·기간 뱃지)
• /campaigns/[slug] 상세 뷰(첨부 ③ 간소 버전)	SSR 캐시 or CSR 프리패치
4. 추가 필드 & 업무 로직	• 기간·보상·가이드 등 필드 확장
• 리뷰어 신청 / 선발 / 결과 발표 워크플로	일정 제어, 상태머신
5. 통계 & 알림	• 신청자 수 집계 차트
• Slack/Email 알림 Webhook	운영 편의
6. QA & 배포	• E2E playwright 테스트
• Replit → Production 브랜치 자동 배포	안정성

즉시 할 일 체크리스트
 drizzle-kit push 로 공식 마이그레이션 반영

 display_order 컬럼 rename

 /api/admin/campaigns CRUD에 isAdmin 미들웨어 삽입 확인

 Cloudinary 업로드 키(CLOUDINARY_URL) 준비 & 업로드 로직 교체

 CampaignManagement.tsx ‑ 신규 저장 후 리스트 리프레시

위 항목 처리 후 MVP(캠페인 생성·리스트·상세) 까지 빠르게 완료한 뒤, 첨부 ③의 세부 단계(기간, 보상, 가이드 등)를 2차 스프린트에서 추가하면 됩니다.